name: CI Pipeline for Frontend

on:
  push:
    branches: ['main', 'dev']
  pull_request:
    branches: ['main', 'dev']

jobs:
  run-linters:
    name: Run linters
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install Node.js dependencies
        run: npm install
      - name: Run ESLint
        run: npx eslint '**/*.ts'
        env:
          CI: true
      - name: Run Prettier
        run: npx prettier --check '**/*.ts'

  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    needs: run-linters
    if: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') }}

    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-docker-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set image name
        id: image_name
        run: echo "IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/remo-fe:${{ github.sha }}" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}
          build-args: |
            REACT_APP_PORT=${{ secrets.REACT_APP_PORT }}
            API_BASE_URL=${{ secrets.API_BASE_URL }}
            VITE_GOOGLE_CLIENT_ID=${{ secrets.VITE_GOOGLE_CLIENT_ID }}
            VITE_OAUTH_CLIENT_ID=${{ secrets.VITE_OAUTH_CLIENT_ID }}
            VITE_GOOGLE_AUTHORIZED_REDIRECT_URI=${{ secrets.VITE_GOOGLE_AUTHORIZED_REDIRECT_URI }}
            VITE_URL_API=${{ secrets.VITE_URL_API }}
            VITE_WEB_URL=${{ secrets.VITE_WEB_URL }}
            TMDB_API_KEY=${{ secrets.TMDB_API_KEY }}
            TMDB_ACCESS_TOKEN=${{ secrets.TMDB_ACCESS_TOKEN }}
            TMDB_URL_API=${{ secrets.TMDB_URL_API }}
        env:
          REACT_APP_PORT: ${{ secrets.REACT_APP_PORT }}
          API_BASE_URL: ${{ secrets.API_BASE_URL }}
          VITE_GOOGLE_CLIENT_ID: ${{ secrets.VITE_GOOGLE_CLIENT_ID }}
          VITE_OAUTH_CLIENT_ID: ${{ secrets.VITE_OAUTH_CLIENT_ID }}
          VITE_GOOGLE_AUTHORIZED_REDIRECT_URI: ${{ secrets.VITE_GOOGLE_AUTHORIZED_REDIRECT_URI }}
          VITE_URL_API: ${{ secrets.VITE_URL_API }}
          VITE_WEB_URL: ${{ secrets.VITE_WEB_URL }}
          TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}
          TMDB_ACCESS_TOKEN: ${{ secrets.TMDB_ACCESS_TOKEN }}
          TMDB_URL_API: ${{ secrets.TMDB_URL_API }}

      - name: Logout from Docker Hub
        run: docker logout

  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: build-and-push
    if: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') }}

    steps:
      - name: SSH and Deploy
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_PRIVATE_KEY }}
          port: 22
          script: |
            cd ./remo-deployment
            bash ./deploy.sh frontend ${{ github.sha }}
